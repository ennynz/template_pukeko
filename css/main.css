@import url(http://fonts.googleapis.com/css?family=Lobster|Arimo:400,700);
.button-1 {
  padding: .9rem .65rem .65rem .65rem;
  border: 0.18rem solid whitesmoke;
  border-radius: .5rem;
  text-transform: uppercase;
  color: whitesmoke;
  text-align: center;
  text-decoration: none;
  -webkit-transition: all 350ms ease;
          transition: all 350ms ease;
  cursor: pointer; }
  .button-1:hover {
    background: rgba(245, 245, 245, 0.2); }

.button-2 {
  padding: .9rem .65rem .65rem .65rem;
  border: 0.18rem solid #555555;
  border-radius: .5rem;
  text-transform: uppercase;
  color: #555555;
  text-align: center;
  text-decoration: none;
  -webkit-transition: all 350ms ease;
          transition: all 350ms ease;
  cursor: pointer; }
  .button-2:hover {
    background: rgba(85, 85, 85, 0.2); }

/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
.box {
  *zoom: 1;
  width: auto;
  max-width: 1280px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  .box:before, .box:after {
    content: '';
    display: table; }
  .box:after {
    clear: both; }

.box-col-2 {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 46.5%;
  margin-left: 0%;
  margin-right: 7.0%;
  margin-top: 6rem;
  margin-bottom: 6rem; }
  .box-col-2:before, .box-col-2:after {
    content: '';
    display: table; }
  .box-col-2:after {
    clear: both; }
  .box-col-2:last-child {
    margin-right: 0%; }
  @media (max-width: 736px) {
    .box-col-2 {
      display: block;
      clear: both;
      float: none;
      width: 100%;
      margin-left: auto;
      margin-right: auto;
      margin-top: 1rem;
      margin-bottom: 1rem; }
      .box-col-2:first-child {
        margin-left: auto; }
      .box-col-2:last-child {
        margin-right: auto; } }

.col-action-3 {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.3333333333%;
  margin-left: 0%;
  margin-right: 3%; }
  .col-action-3:before, .col-action-3:after {
    content: '';
    display: table; }
  .col-action-3:after {
    clear: both; }
  .col-action-3:last-child {
    margin-right: 0%; }
  @media (max-width: 736px) {
    .col-action-3 {
      display: block;
      clear: both;
      float: none;
      width: 100%;
      margin-left: auto;
      margin-right: auto;
      margin-bottom: 1rem; }
      .col-action-3:first-child {
        margin-left: auto; }
      .col-action-3:last-child {
        margin-right: auto; } }

.col-2-nested {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 48.5%;
  margin-left: 0%;
  margin-right: 3%;
  margin-bottom: 1rem;
  text-align: center; }
  .col-2-nested:before, .col-2-nested:after {
    content: '';
    display: table; }
  .col-2-nested:after {
    clear: both; }
  .col-2-nested:nth-child(2n) {
    margin-right: 0%;
    float: right; }
  .col-2-nested:nth-child(2n + 1) {
    clear: both; }
  @media (max-width: 736px) {
    .col-2-nested {
      *zoom: 1;
      float: left;
      clear: none;
      text-align: inherit;
      width: 31.3333333333%;
      margin-left: 0%;
      margin-right: 3%;
      text-align: center; }
      .col-2-nested:before, .col-2-nested:after {
        content: '';
        display: table; }
      .col-2-nested:after {
        clear: both; }
      .col-2-nested:nth-child(2n) {
        margin-right: 3%;
        float: left; }
      .col-2-nested:nth-child(2n + 1) {
        clear: none; }
      .col-2-nested:nth-child(3n) {
        margin-right: 0%;
        float: right; }
      .col-2-nested:nth-child(3n + 1) {
        clear: both; } }

header {
  background: -webkit-linear-gradient(45deg, #0061d1 0%, #0092ba 67%, #0092ba 100%);
  background: linear-gradient(45deg, #0061d1 0%, #0092ba 67%, #0092ba 100%);
  width: 100%;
  height: 40rem;
  position: relative; }

.header-title {
  position: absolute;
  width: 100%;
  margin-top: 7rem; }
  .header-title h1 {
    color: whitesmoke;
    font-family: "Lobster", cursive;
    font-size: 4rem;
    text-align: center;
    padding: 0 1rem;
    line-height: normal; }
    @media (max-width: 736px) {
      .header-title h1 {
        font-size: 2rem; } }
  .header-title p {
    color: whitesmoke;
    text-align: center;
    padding: 1.8rem 1rem 0 1rem;
    line-height: 1.5rem; }

.header-logo {
  color: whitesmoke;
  text-align: center;
  width: 100%;
  padding-bottom: 2rem; }

.header-action {
  position: absolute;
  width: 100%;
  bottom: 7rem; }

.button-header-action {
  *zoom: 1;
  width: auto;
  max-width: 12.5rem;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  .button-header-action:before, .button-header-action:after {
    content: '';
    display: table; }
  .button-header-action:after {
    clear: both; }

.header-line {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 50%;
  margin-left: 0%;
  margin-right: 0%;
  border-right: 0.18rem solid whitesmoke;
  position: absolute;
  bottom: 0rem;
  height: 7rem; }
  .header-line:before, .header-line:after {
    content: '';
    display: table; }
  .header-line:after {
    clear: both; }
  .header-line:last-child {
    margin-right: 0%; }

#section-txt-img-plainbg h2 {
  font-family: "Lobster", cursive;
  font-size: 2rem;
  padding: 1rem 0 2rem 0; }
  @media (max-width: 736px) {
    #section-txt-img-plainbg h2 {
      padding: 5rem 0 2rem 0;
      text-align: center; } }
@media (max-width: 736px) {
  #section-txt-img-plainbg p {
    text-align: center; } }

.section-txt-img-plainbg-img-1 {
  border-radius: .5rem;
  margin-top: 1rem;
  display: block;
  width: 95%; }
  @media (max-width: 736px) {
    .section-txt-img-plainbg-img-1 {
      margin-left: 2.5%;
      margin-top: 2rem;
      margin-bottom: 5rem; } }

.section-txt-img-plainbg-content {
  padding-left: 1.5rem; }
  @media (max-width: 736px) {
    .section-txt-img-plainbg-content {
      padding-right: 1.5rem; } }

#section-txt-icons-picbg h2 {
  color: whitesmoke;
  line-height: normal;
  padding-bottom: 2rem; }
#section-txt-icons-picbg p {
  color: whitesmoke;
  padding-top: 1rem; }
#section-txt-icons-picbg .line-separator {
  border-color: rgba(245, 245, 245, 0.5); }
#section-txt-icons-picbg .fa {
  color: rgba(245, 245, 245, 0.6);
  text-align: center;
  padding: 3rem; }

.section-txt-icons-picbg-img-bg {
  background-image: url(../img/img-2.jpg);
  background-size: auto, cover;
  background-attachment: fixed, fixed;
  background-position: bottom;
  width: 100%;
  height: auto; }
  @media (max-width: 736px) {
    .section-txt-icons-picbg-img-bg {
      background-attachment: scroll;
      background-repeat: no-repeat; } }

.section-txt-icons-picbg-content {
  padding-right: 3rem; }
  @media (max-width: 736px) {
    .section-txt-icons-picbg-content {
      padding-right: 2rem;
      padding-left: 2rem;
      margin-bottom: 5rem;
      text-align: center; } }

@media (max-width: 736px) {
  .section-txt-icons-picbg-icons-container {
    margin-top: 5rem; } }

#section-3-img-action h2 {
  text-align: center;
  margin-top: 5rem; }
#section-3-img-action h3 {
  text-align: center;
  font-size: 1.3rem;
  padding: 2rem 0; }
#section-3-img-action .line-separator {
  margin: 2rem auto; }
#section-3-img-action p {
  text-align: center; }
#section-3-img-action img {
  width: 92%;
  margin-left: 4%;
  margin-right: 4%;
  border-radius: 5px; }

.section-3-img-action-container {
  margin-top: 3rem; }
  @media (max-width: 736px) {
    .section-3-img-action-container {
      margin-bottom: 1rem; } }

.action-description {
  padding: 0 1rem; }
  @media (max-width: 736px) {
    .action-description {
      padding: 0 3rem; } }

.button-action {
  *zoom: 1;
  width: auto;
  max-width: 7.5rem;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  margin-top: 2rem;
  margin-bottom: 5rem; }
  .button-action:before, .button-action:after {
    content: '';
    display: table; }
  .button-action:after {
    clear: both; }
  @media (max-width: 736px) {
    .button-action {
      margin-bottom: 4rem; } }

body {
  font-family: "Arimo", sans-serif;
  font-size: 1rem;
  line-height: 1.5rem;
  color: #555555;
  letter-spacing: .15rem;
  background-color: whitesmoke; }
  @media (max-width: 736px) {
    body {
      font-size: 0.75rem; } }

h2 {
  font-family: "Lobster", cursive;
  font-size: 2rem; }

.line-separator {
  height: 0;
  border-bottom: 0.12rem solid rgba(85, 85, 85, 0.5);
  margin-bottom: 1.4rem;
  width: 7.5rem; }
  @media (max-width: 736px) {
    .line-separator {
      margin-left: auto;
      margin-right: auto; } }
